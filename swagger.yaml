swagger: '2.0'
info:
  description: >-
    This is the specification for the Shareable Apps Api
  version: 1.0.0
  title: Shareable Apps API
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: shareableapps.com
basePath: /v2
tags:
  - name: aggregator
    description: 'Combination of '
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: org
    description: Access to organisation object.
  - name: app
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
definitions:
  User:
    type: object
    required:
      - email
      - firstName
      - lastName
      - phone
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
  App:
    type: object
    required:
      - name
      - vanityName
    properties:
      name:
        type: string
      keywords:
        type: string
      vanityName:
        type: string
      description:
        type: string
      categoryId:
        type: string
      templateName:
        type: string
      attachment:
        type: string
  Org:
    type: object
    properties:
      name:
        type: string
  Composite:
    type: object
    required:
      - orgName
      - email
      - postCode
      - countryCode
      - phone
      - city
      - address1
      - address2
    properties:
      orgName:
        description: Organisation Name
        type: string
      email:
        type: string
        format: email
      postCode:
        type: string
      countryCode:
        type: string
      phone:
        type: string
      city:
        type: string
      address1:
        type: string
      address2:
        type: string
      apps:
        type: array
        items:
          $ref: '#/definitions/App'
      user:
        $ref: '#/definitions/User'
schemes:
  - http
securityDefinitions:
  APIKey:
    type: apiKey
    in: header
    name: Authorization
security:
  - APIKey: []
paths:
  /aggregator/createOrgAndApp:
    post:
      tags:
        - aggregator
      summary: Create Organisation and App
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Composite
          description: 'Create Organisation, App and User'
          schema:
            example: 
              orgName: Amplifier Agency
              email: api@amplifieragency.com
              postCode: '3000'
              countryCode: '61'
              phone: '6142328870'
              city: Melbourne
              address1: 55 Collins Street
              address2: Level 1
            $ref: '#/definitions/Composite'
      responses:
        '405':
          description: Invalid input
          examples:
            application/json:
              - question: "Favourite programming language?"
                published_at: "2015-08-05T08:40:51.620Z"
                choices:
                  - choice: "Swift"
                    votes: 2048
                  - choice: "Python"
                    votes: 1024
                  - choice: "Objective-C"
                    votes: 512
                  - choice: "Ruby"
                    votes: 256
  /org:
    get:
      tags:
        - org
      summary: Add a new pet to the store
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: test
  '/org/{orgId}':
    get:
      tags:
        - org
      summary: Get Org By Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: orgId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
    post:
      tags:
        - org
      summary: Post Org By Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: orgId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
  /app:
    get:
      tags:
        - app
      summary: Add a new pet to the store
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: test
  '/app/{appId}':
    get:
      tags:
        - app
      summary: Get Org By Id
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: appId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
    post:
      tags:
        - app
      summary: Post Org By Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: appId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '405':
          description: Invalid input