swagger: '2.0'
info:
  description: >-
    This is the API specification for the Shareable Apps Api
  version: 1.0.0
  title: Shareable Apps API
  termsOfService: 'http://amplifieragency.com/terms/'
  contact:
    email: contact@amplifieragency.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.shareableapps.com
basePath: /api2
tags:
  - name: aggregator
    description: 'Creates and links an Organisation, App and a default User'
  - name: org
    description: Access to organisation object.
  - name: app
    description: Access to the app object.
definitions:
  User:
    type: object
    required:
      - email
      - firstName
      - lastName
      - phone
      - countryId
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      countryId:
        type: integer
  App:
    type: object
    required:
      - name
      - vanityName
    properties:
      name:
        description: Name of the App
        type: string
      keywords:
        type: string
      vanityName:
        description: Vanity name. To be used for <vanityname>.shareableapps.com
        type: string
      description:
        description: Description of App
        type: string
      categoryId:
        description: >
            Category id 
              * 27 - Agriculture & Forestry
              * 28 - Architecture
              * 1 - Arts & Entertainment
              * 2 - Automotive Industry
              * 29 - Baby & Maternity
              * 7 - Banking & Finance
              * 30 - Bars & Clubs
              * 3 - Beauty & Cosmetics
              * 4 - Books & Literature
              * 5 - Business and Industrial Market
              * 56 - Charity & Philanthropy
              * 31 - Child Care
              * 32 - Clerical & Administrative Jobs
              * 6 - Computers & Electronics
              * 33 - Construction & Maintenance
              * 34 - Consulting
              * 35 - Defense & Military
              * 36 - Design
              * 14 - Education
              * 37 - Energy & Utilities
              * 38 - Fashion & Jewelry
              * 39 - Fishing & Hunting 
              * 40 - Fitness
              * 8 - Food & Drink
              * 41 - Gambling
              * 9 - Games
              * 15 - Government
              * 10 - Healthcare & Medical
              * 11 - Hobbies & Leisure
              * 12 - Home & Garden
              * 43 - Hotels & Accommodation
              * 44 - Insurance
              * 45 - Investment 
              * 46 - Legal
              * 47 - Manufacturing
              * 57 - Marketing, Advertising & PR
              * 49 - Mining
              * 16 - News & Media
              * 17 - Online Communities
              * 26 - Other
              * 18 - People and Society
              * 19 - Pets & Animals
              * 48 - Police & Emergency Services
              * 20 - Real Estate
              * 50 - Recruitment & Staffing
              * 21 - Reference
              * 51 - Restaurants & Cafes
              * 23 - Retail
              * 22 - Science & Research
              * 24 - Sports & Recreation
              * 52 - Technology & Software
              * 13 - Telecommunications & Internet
              * 53 - Transportation & Logisitics
              * 25 - Travel
              * 54 - Warehousing & Storage
              * 55 - Wholesalers 
        type: string
      templateName:
        description: Template name
        type: string
      attachment:
        description: Base64 encoded App Icon Image
        type: string
        format: byte
  Org:
    type: object
    properties:
      name:
        type: string
  Composite:
    type: object
    required:
      - orgName
      - email
      - postCode
      - countryCode
      - phone
      - city
      - address1
      - address2
    properties:
      orgName:
        description: Organisation Name
        type: string
      email:
        description: Organisation Email address
        type: string
        format: email
      postCode:
        description: Organisation Post code
        type: string
      countryCode:
        description: Organisation Country Code
        type: string
      phone:
        description: Organisation Phone
        type: string
      city:
        description: Organisation City
        type: string
      address1:
        description: Organisation Address Line 1
        type: string
      address2:
        description: Organisation Address Line 2
        type: string
      apps:
        type: array
        items:
          $ref: '#/definitions/App'
      user:
        $ref: '#/definitions/User'
schemes:
  - http
securityDefinitions:
  APIKey:
    type: apiKey
    in: header
    name: Authorization
    description: 'The Apikey is used to correctly identify the correct organisation for API Calls. This key must be sent within the headers in every request to an endpoint. <br><br>An API Key can be created by an Admin organisation using the following url: https://shareableapps.com/admin/user/api/ <br><br>The key follows the following format `xxxxxxxxxxxxxxxxxxxx:xxxxxxxxxxxxxxxxxxxxx`<br><br>The word "apiKey" must be prefixed against the key inside the header. <br>Example `Authorization: apiKey xxxxxxxxxxxxxxxxxxxx:xxxxxxxxxxxxxxxxxxxxx`'
security:
  - APIKey: []
paths:
  /aggregator/createOrgAndApp:
    post:
      tags:
        - Aggregate Functions
      summary: Create Organisation and App
      description: 'Creates and links an organisation, an app and a default user.'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: Composite
          description: 'Create Organisation, App and User'
          schema:
            example: 
              orgName: Amplifier Agency
              email: api@amplifieragency.com
              postCode: '3000'
              countryCode: '61'
              phone: '+6142328870'
              city: Melbourne
              address1: 55 Collins Street
              address2: Level 1
              apps: 
                - name : test 
                  keywords: Tag1
                  vanityName: appName
                  description: Tag Description
                  categoryId: "6"
                  attachment: ",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"
              user: 
                  firstName : test 
                  lastName: test2
            $ref: '#/definitions/Composite'
      responses:
        '200':
          description: Successful Org, App and Default user created. Returns the App link and Default user credentials
          examples:
            application/json:
              - data: 
                user: 
                  password: "BXKHJLic"
                  username: "default@test.com"
                apps:
                  links: 
                    - "TestApp3225.shareableapps.com"
        '500':
          description: Missing Organisation Data
          examples:
            application/json:
                error: 
                - message: 
                    email : 
                      - 'missing required field: orgName:name'
                  reason:
                    ErrorOrgFields
  /user:
    post:
      tags:
        - User
      summary: Create new user
      description: Creates a new user with the attributes
      consumes: 
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful App creation
          examples:
            application/json:
              - data: 
                user:
                  username:  "TestApp3225eee.shareableapps.com"
                  password:  "teXeqOW2"
      parameters:
        - in: body
          name: Composite
          description: 'Create User in Organisation'
          schema:
            example: 
              email: "Email3354@ttest.com323233"
              postCode: "3178"
              countryCode: "61"
              address1: "test"
              address2: "test2"
              phone: "+61423288275"
              city: "Melbourne"
              firstName: "test"
              lastName: "test"
            $ref: '#/definitions/User'
    get:
      tags:
        - User
      summary: Fetch all users
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '405':
          description: test
  '/user/{userId}':
    get:
      tags:
        - User
      summary: Fetch User
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
    post:
      tags:
        - User
      summary: Update Organisation
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: userId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
  /app:
    post:
      tags:
        - Application
      summary: Create a new Application
      description: Creates a new app with the attributes
      consumes: 
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Successful App creation
          examples:
            application/json:
              - data: 
                app:
                  links: 
                    - "TestApp3225eee.shareableapps.com"
      parameters:
        - in: body
          name: Composite
          description: 'Create App in Organisation'
          schema:
            example:
              name: Test App1
              keywords: "Hello, Test"
              vanityName: "TestApp32254eeee"
              description: "Hello this is a test"
              categoryId: "26"
              templateName: "default"
              attachment: ","
            $ref: '#/definitions/User'
    get:
      tags:
        - Application
      summary: List all applications
      description: ''
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Success
  '/app/{appId}':
    get:
      tags:
        - Application
      summary: Fetch application by ID
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: appId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '200':
          description: Success
        '405':
          description: Invalid input
    post:
      tags:
        - Application
      summary: Update application by ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: appId
          type: integer
          required: true
          description: Numeric ID of the user to get.
      responses:
        '405':
          description: Invalid input